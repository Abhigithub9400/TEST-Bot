name: Build and Deploy to Minikube

on:
  push:
    branches:
      - test # Trigger deployment when changes are pushed to the main branch
  workflow_dispatch:  # Allow manual trigger from GitHub Actions UI

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Build and push the Docker image to Docker Hub
      - name: Build and push Docker image
        run: |
          docker build -t abhijithdockerhub/dotnet:latest .  # Build the image
          docker push abhijithdockerhub/dotnet:latest        # Push to Docker Hub

      # Step 5: Set up Minikube kubectl context
      - name: Set up Minikube kubectl context
        run: |
          echo ${{ secrets.KUBE_CONFIG }} | base64 --decode > ~/.kube/config  # Use kubeconfig from GitHub secret
          kubectl config use-context minikube  # Ensure kubectl points to the Minikube context

      # Step 6: Deploy to Minikube using the Kubernetes manifest file
      - name: Deploy to Minikube
        run: |
          kubectl apply -f minikube/k8manifest.yaml  # Apply the deployment and service manifest
          
      # # Optional Step: Expose the app locally if you need to test it
      # - name: Expose app via port-forwarding
      #   run: |
      #     kubectl port-forward service/my-app-service 8080:80 &  # Forward port 80 to localhost:8080
